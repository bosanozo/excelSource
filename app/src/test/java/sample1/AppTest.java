/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package sample1;

//import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import org.junit.platform.commons.util.StringUtils;

import static org.junit.jupiter.api.Assertions.*;

import java.io.IOException;

import com.google.api.client.http.ByteArrayContent;
import com.google.api.client.http.GenericUrl;
import com.google.api.client.http.HttpRequest;
import com.google.api.client.http.HttpRequestFactory;
import com.google.api.client.http.HttpResponse;
import com.google.api.client.http.javanet.NetHttpTransport;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;

class AppTest {
    private static final String baseUrl = "https://u57nfat2zh.execute-api.ap-northeast-1.amazonaws.com/prod/v1/";
    private HttpRequestFactory reqFactory = new NetHttpTransport().createRequestFactory();
    private JsonObject result = new JsonObject();

    @ParameterizedTest
    @ExcelSource(file = "../testdata/test1.xlsx", sheet = "Sheet1")
    void test1(TestData testData) {
        if (testData.isSkip()) {
            System.out.println("skip!");
            return;
        }

        GenericUrl url = new GenericUrl(baseUrl + testData.getPath());
        try {
            HttpRequest request = reqFactory.buildRequest(testData.getMethod().toUpperCase(), url, null);
            request.setThrowExceptionOnExecuteError(false);
            String inputJson = testData.getInput();
            if (StringUtils.isNotBlank(inputJson)) {
                JsonElement input = JsonParser.parseString(inputJson);
                System.out.println("input: " + input);
                request.setContent(ByteArrayContent.fromString("application/json", input.toString()));
            }

            // call api
            HttpResponse response = request.execute();
            System.out.println("status: " + response.getStatusCode());            
            assertEquals(testData.getStatus(), response.getStatusCode());

            if ("application/json".equals(response.getContentType())) {
                JsonElement actual = JsonParser.parseString(response.parseAsString());
                System.out.println("actual: " + actual);
                if (StringUtils.isNotBlank(testData.getResultName())) {
                    result.add(testData.getResultName(), actual);
                }

                String expectedJson = testData.getExpected();
                if (StringUtils.isNotBlank(expectedJson)) {
                    JsonElement expected = JsonParser.parseString(expectedJson);
                    System.out.println("expected: " + expected);
                    System.out.println(expected.equals(actual));
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // @Test
    //@ParameterizedTest
    @ValueSource(strings = { "Java", "java", "JAVA" })
    void test2(String s) {
        System.out.println(s);
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
}
